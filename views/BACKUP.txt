<!--   <% if (messages.error) { %>
  <p style="color:red"><%- messages.error %></p>
  <% } %> -->
  
  <% if (messages.success) { %>
      <p class="alert alert-success mt-4"><%- messages.success %></p>
  <% } %>  
  <br>
    <table class="table">
  <thead>
    <tr>
      <th scope="col">#</th>
      <th scope="col">Name</th>
      <th scope="col">Email</th>
      <th width="200px">Action</th>
   
    </tr>
  </thead>
  <tbody>
    <% if(data.length){
   
    for(var i = 0; i< data.length; i++) {%>  
    <tr>
      <th scope="row"><%= (i+1) %></th>
      <td><%= data[i].name%></td>
      <td><%= data[i].email%></td>
      <td>
      <a class="btn btn-success edit" href="../users/edit/<%=data[i].id%>">Edit</a>                                            
     </td>
    </tr>
    <% }
             
     }else{ %>
         <tr>
            <td colspan="3">No user</td>
         </tr>
      <% } %>    
    
  </tbody>
  </table>













/**
 * The database.js file is a route module 
 * that contains code needed to connect to
 * the SQL database containing the structure
 * and information for the Patient Care Manager
 * project. This file is the setup portion of
 * the project where the existing database is
 * connected to the frontend through the use
 * of SQL, node/npm packages, and APIs.
 * 
 * Project: Mayo Clinic (PCM) Web Application
 * Author: Andrew Krause
 * Class: CS 364
 * Date: 5/10/2022
 * 
 */

// Add the packages that are required.
const bodyParser = require('body-parser');
var express = require('express');
var databaseRouter = express.Router();

// Add packages for the database here.
// const mysql = require("mysql");
const {createPool} = require('mysql');

// Create a database pool here. Also set
// the database connection credentials.
const pool = createPool({

    // Add the database credentials here.
    host: "localhost",
    user: "root",
    password: "databases",
    connectionLimit: 10
});

// Get all of the patients from the patients table. (YOU WILL
// DISPLAY THIS ON THE PATEINTS VIEW PAGE AT SOME POINT!!!)
pool.query("SELECT * FROM PCM.Patient", function(error, res) {

    // If there is an error, log the error.
    if(error) {
        console.log(error);
    }

    // Otherwise, log the data obtained 
    // from the database.
    return console.log(res);
});


// // Establish connection parameters for your database.
// // --> CAN ALSO CREATE A CONNCECTION POOL IF NEED BE
// // --> TO LIMIT THE NUMBER OF REQUESTS MADE PER SECOND.
// // --> LOOK UP HOW TO DO THIS IF YOU NEED TO!!!
// const db = mysql.createConnection({

//     // Database properties.
//     // --> KEEP IN MIND THAT THINGS WILL CHANGE WHEN 
//     // --> YOU PUBLISH THE SITE TO HEROKU!!!
//     host: 'localhost',
//     user: 'root',
//     password: '',
//     database: 'PCM'
// });

// // Connect with the SQL database service.
// db.connect(function(error) {

//     // If there is an error, log the error.
//     if(error) {
//         console.log(error.message);
//     }

//     // Otherwise, indicate a successfull
//     // connection.
//     console.log("Connection to PCM DB successfull!");
// });

// // Query the database that exists in your phpmyadmin service.
// databaseRouter.get("/test-route", function(req, res) {

//     // Create a connection query.
//     db.query("SELECT * FROM Patient", function(error, rows, fields) {

//         // If there is an error, log the error.
//         if(error) {
//             console.log("Error in query.");
//             console.log(error);

//         // Otherwise, show that the query was sucessfull.
//         } else {
//             console.log("Success!");
//         }
//     });
// });


// Close the connection in this function.
// connection.end(function(req, res) {
//     // The connection is closed.
// });

// --> HOW YOU WOULD QUERY SOMETHING FROM THE DATABASE.
// databaseRouter.get("/", function(req, res) {
//     connection.query("SELECT * FROM Patient", function(error, rows, fields) {
//         if(error) {
//             console.log("Error in the query.");
//         } else {
//             console.log("POOP");
//         }
//     });
// });

// var connection = mysql.createConnection({
//     host: 'localhost', // Replace with your host name
//     user: 'root',      // Replace with your database username
//     password: '',      // Replace with your database password
//     database: 'PCM.db' // // Replace with your database Name
// }); 
 
// connection.connect(function(err) {
//   if (err) throw err;
//   console.log('Database is connected successfully !');
// });
// module.exports = connection;

// databaseRouter.listen(1337, function(){
//     console.log("POOP.");
// });

// Export the module for use in the main app.js file.
module.exports = databaseRouter;
















<!-- 
    The patients.ejs file displays the patients 
    that are stored in the database. Each patient
    name as well as the attributes associated with
    that patient are displayed in a list format on
    this page. Each patient entity on this page can
    be edited or removed. A new patient can also 
    be added to the databases through this page.
    ...
    Project: Mayo Clinic Patient Care Manager 
             (PCM) Web Application
    Author: Andrew Krause
    Class: Introduction to Database 
           Management Systems (CS 364)
    Date: 5/10/2022
    ...
-->

<%- include('./partials/header.ejs') %>

    <!-- Section for the list of patients on the webpage -->
    <section id="patients-page">
        <div class="fade-in">
            <header>
                <h1 class="patient-page-text">Patients</h1>
            </header>
            <div class="patient-ordering">
                <!-- Create forms to process when user clicks the "Add Patient" button and the "Back" button -->
                <div class="patient-buttons">
                    <a id="patient-back-arrow" class="patient-button-container-one" href="/views">
                        <span class="patient-button-icon"><i class="fa-solid fa-arrow-left-long"></i></span> Back
                    </a>
                    <a id="patient-add-icon" class="patient-button-container-two" href="/create_patient">
                        <span class="patient-button-icon"><i class="fa-solid fa-circle-plus"></i></span> New
                    </a>
                </div>

                <!-- 
                    This is the section where the patient data
                    is loaded to be displayed on the page
                -->
                <div class="patient-items">
                    
                    <!-- 
                        If there is data in the patient table 
                        of the database, display that data
                    -->
                    <% if(patientData.length != 0) { %>

                        <!-- 
                            Create a function to obtain the patient ID in order to 
                            perform an update operation on any given patient entity.
                        -->
                        <% function getUpdateValue() { %>
                            
                            <% // Create variables to obtain the chevron element. %>
                            <% var value = "update_" + event.currentTarget.id; %>
                            <% var element = document.getElementById(value).value; %>
                        <% } %>

                        <!-- 
                            Create a function to obtain the patient ID in order to 
                            perform an remove operation on any given patient entity.
                        -->
                        <% function getRemoveValue() { %>
                            
                            <% // Create variables to obtain the chevron element. %>
                            <% var value = "remove_" + event.currentTarget.id; %>
                            <% var element = document.getElementById(value).value; %>
                        <% } %>

                        <!-- Include a function to simplify the date display -->
                        <% function simplifyEventDate(eventDate) { %>

                            <% // First split the event into the components that directly %>
                            <% // involve the numberical representations of a date. %>
                            <% var date = eventDate.toISOString().split("T")[0]; %>
                        
                            <% // Create variables for workring with %>
                            <% // the nubmers in the date variable. %>
                            <% var arrayDate = date.split('-'); %>
                            <% var day = arrayDate[2]; %>
                            <% var getMonth = arrayDate[1]; %>
                            <% var month = ""; %>
                            <% var year = arrayDate[0]; %>
                            <% var simplifiedDate = ""; %>
                        
                            <% // Use a series of conditionals to determine %>
                            <% // what the name of the month is based on the %>
                            <% // numerical representation of it. %>
                            <% if(getMonth.localeCompare('01') == 0) { %>
                                <% month = 'Jan'; %>
                            <% } else if(getMonth.localeCompare('02') == 0) { %>
                                <% month = 'Feb'; %>
                            <% } else if(getMonth.localeCompare('03') == 0) { %>
                                <% month = 'Mar'; %>
                            <% } else if(getMonth.localeCompare('04') == 0) { %>
                                <% month = 'Apr'; %>
                            <% } else if(getMonth.localeCompare('05') == 0) { %>
                                <% month = 'May'; %>
                            <% } else if(getMonth.localeCompare('06') == 0) { %>
                                <% month = 'Jun'; %>
                            <% } else if(getMonth.localeCompare('07') == 0) { %>
                                <% month = 'Jul'; %>
                            <% } else if(getMonth.localeCompare('08') == 0) { %>
                                <% month = 'Aug'; %>
                            <% } else if(getMonth.localeCompare('09') == 0) { %>
                                <% month = 'Sep'; %>
                            <% } else if(getMonth.localeCompare('10') == 0) { %>
                                <% month = 'Oct'; %>
                            <% } else if(getMonth.localeCompare('11') == 0) { %>
                                <% month = 'Nov'; %>
                            <% } else if(getMonth.localeCompare('12') == 0) { %>
                                <% month = 'Dec'; %>
                            <% } else { %>
                                <% month = 'ERROR'; %>
                            <% } %>
                        
                            <% // Create the simplified date and return it. %>
                            <% simplifiedDate = month + " " + day + ", " + year; %>
                            <% return simplifiedDate; %>
                        <% } %>

                        <!-- 
                            Loop through all of the patients in the 
                            database and display them on the page 
                        -->
                        <% patientData.forEach(function(data) { %>

                            <!-- Create a card for each patient -->
                            <!-- First, create a heading that displays the name of each patient -->
                            <div class="patient-name">

                                <!-- 
                                    If the patient has been discharged from treatment, print out an
                                    icon to indicate that they are done being treated. Otherwise, print
                                    out an icon to indicate that they are currently in treatment.
                                -->
                                <h2 class="patient-name-text">

                                    <!-- Include a div to show the patient name and action buttons -->
                                    <div class="name-and-buttons">

                                        <!-- 
                                            Display an icon indicating whether or not the patient has 
                                            been discharged from the hospital. Also include the patient's
                                            full name.
                                        -->
                                        <div>
                                            <!-- 
                                                If the patient has been discharged, display the heart check icon.
                                                Otherwise, display the heart icon indicating that treatment is 
                                                ongoing.
                                            -->
                                            <% if(data.PatientEndDate) { %>
                                                <i class="fa-solid fa-heart-circle-check"></i>
                                            <% } else { %>
                                                <i class="fa-solid fa-heart-pulse"></i>
                                            <% } %> 
                                            <%= data.PatientFirstName %> <%= data.PatientMiddleName %> <%= data.PatientLastName %>
                                        </div>

                                        <!-- Include action (edit and remove) buttons here -->
                                        <div class="edit-remove-buttons">

                                            <!-- Makes POST request to the edit-patient route -->
                                            <form class="form-horizontal" action="/update_patient" method="POST">
                                                <input id="update_<%= data.PatientID %>" type="hidden" class="patientclass" name="patientidentifier" value="<%= data.PatientID %>" onChange="getUpdateValue()">  
                                                <button id="<%= data.PatientID %>" type="submit" class="edit-white edit-remove"><i class="fa-solid fa-pencil"></i></button>
                                            </form>

                                            <!-- Makes POST request to the remove-patient route -->
                                            <form class="form-horizontal" action="/remove_patient" method="POST">
                                                <input id="remove_<%= data.PatientID %>" type="hidden" class="patientclass" name="patientidentifier" value="<%= data.PatientID %>" onChange="getRemoveValue()">  
                                                <button type="submit" class="edit-red edit-remove"><i class="fa-solid fa-trash-can"></i></button>
                                            </form>
                                        </div>
                                    </div>
                                </h2>
                            </div>

                            <!-- Create the main-content portion of the patient card -->
                            <div class="patient-card">
                                <!-- Each column of the card displays different amounts of data -->
                                <div class="patient-column">
                                    <p class="patient-text-info"><b>Birthdate:</b> <%= simplifyEventDate(data.PatientBirthdate) %></p>
                                    <p class="patient-text-info"><b>Sex:</b> <%= data.PatientSex %></p> 
                                    <p class="patient-text-info"><b>Height:</b> <%= data.PatientHeight %> feet/inches</p>
                                    <p class="patient-text-info"><b>Weight:</b> <%= data.PatientWeight %>lbs</p>
                                    <p class="patient-text-info"><b>Description:</b> <%= data.PatientNotes %></p>
                                </div>
                                <!-- Each column of the card displays different amounts of data -->
                                <div class="patient-column">
                                    <p class="patient-text-info"><b>Phone:</b> <%= data.PatientPhone %></p>
                                    <p class="patient-text-info"><b>Email:</b> <%= data.PatientEmail %></p>
                                    <p class="patient-text-info"><b>Admitted:</b> <%= simplifyEventDate(data.PatientStartDate) %></p> 
                                    
                                    <!--
                                        If the patient does not have an end/discharge 
                                        date, display a message instead
                                    -->
                                    <% if(data.PatientEndDate) { %>
                                        <p class="patient-text-info"><b>Discharged:</b> <%= simplifyEventDate(data.PatientEndDate) %></p> 
                                    <% } else { %>
                                        <p class="patient-text-info"><b>Discharged:</b> Currently in treatment.</p> 
                                    <% } %>
                                </div>
                            </div>
                        <% }); %>

                    <!-- If there is no patient data, display the message -->
                    <% } else { %>
                        <h2 class="no-patient-data">There is currently no patient data.</h2>
                    <% } %>
                </div>
            </div>
        </div>
    </section>

<%- include('./partials/footer.ejs') %>















<!-- LIKELY DO NOT NEED THIS!!! -->
<!-- <form class="patient-form-horizontal" action="/update_patient" method="POST">
    <input id="update_<%= // data.PatientID %>" type="hidden" class="patientclass" name="patientidentifier" value="<%= data.PatientID %>" onChange="getUpdateValue()">  
    <button id="<%= // data.PatientID %>" type="submit" class="patient-edit-white edit-remove"><i class="fa-solid fa-pencil"></i></button>
</form> -->
